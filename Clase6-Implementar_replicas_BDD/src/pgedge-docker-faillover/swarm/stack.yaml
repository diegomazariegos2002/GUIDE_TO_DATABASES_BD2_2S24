version: "3.5"
services:
  traefik:
    image: traefik:v3.1.2
    command:
      - --api=true
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.swarm=true
      - --providers.swarm.watch=true
      - --providers.file.directory=/traefik
      - --providers.file.watch=true
      - --entrypoints.postgres.address=:5432
      - --accesslog
      - --log.level=DEBUG
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.dynamic.conf.yaml:/traefik/dynamic.conf.yaml
    networks:
      - traefik
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.routers.traefik.middlewares=strip"
        - "traefik.http.middlewares.strip.stripprefix.prefixes=/traefik"

  # Nodo PostgreSQL n1
  postgres-n1:
    image: pgedge/pgedge:latest
    environment:
      - "NODE_NAME=n1"
      - "PGDATA=/data/pgdata"
    ports:
      - target: 5432
        published: 6431
        protocol: tcp
        mode: host
    volumes:
      - "./db.json:/home/pgedge/db.json"
      - "n1:/data"
    networks:
      - database
    deploy:
      labels:
        - "node_name=n1"
        - "traefik.enable=false"

  # Nodo PostgreSQL n2
  postgres-n2:
    image: pgedge/pgedge:latest
    environment:
      - "NODE_NAME=n2"
      - "PGDATA=/data/pgdata"
    ports:
      - target: 5432
        published: 6441
        protocol: tcp
        mode: host
    volumes:
      - "./db.json:/home/pgedge/db.json"
      - "n2:/data"
    networks:
      - database
    deploy:
      labels:
        - "node_name=n2"
        - "traefik.enable=false"

  # Nuevo servicio: pgcat unificado
  pgcat-universal:
    image: pgedge/pgcat:1.0
    ports:
      - target: 6432
        published: 6432
        protocol: tcp
        mode: host
    volumes:
      - "./pgcat.toml:/etc/pgcat/pgcat.toml"
    networks:
      - traefik
      - database
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=db_traefik"
        - "traefik.tcp.routers.router-db.rule=HostSNI(`*`)"
        - "traefik.tcp.routers.router-db.entrypoints=postgres"
        - "traefik.tcp.routers.router-db.service=svc-db"
        - "traefik.tcp.services.svc-db.loadbalancer.server.port=6432"

networks:
  traefik:
  database:

volumes:
  n1:
  n2:
